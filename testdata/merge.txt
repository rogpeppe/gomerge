mkdir m
cd m

# initial commit -> main
cp ../c0/.gitconfig ../c0/.gitattributes ../c0/go.mod ../c0/x.go .
exec git init
exec git config user.email foo@example.com
exec git config user.name foo
exec git config merge.gomerge.name 'custom merge driver for specific files'
exec git config merge.gomerge.driver 'gomerge %A %B %P'
exec git add .
exec git commit -m 'initial commit'
exec git checkout -b main

# require a -> branch1
exec git checkout -b branch1
cp ../c1/go.mod ../c1/a.go .
exec git add .
exec git commit -m 'require a'
exec git checkout main

# require b -> branch2
exec git checkout -b branch2
cp ../c2/go.mod ../c2/b.go .
exec git add .
exec git commit -m 'require b'

# merge branch1 onto main
exec git checkout main
exec git merge branch1

# merge branch2 onto main (conflict)
exec git merge branch2
cmp go.mod ../c3/go.mod
-- c0/.gitconfig --
-- c0/.gitattributes --
go.mod merge=gomerge
-- c0/go.mod --
module github.com/rogpeppe/gomerge

go 1.16
-- c0/x.go --
package main

func main() {
}
-- c1/go.mod --
module github.com/rogpeppe/gomerge

go 1.16

require example.com/a v1.0.0
-- c1/x.go --
package main

func main() {
}
-- c1/a.go --
package main

import _ "example.com/a"
-- c2/go.mod --
module github.com/rogpeppe/gomerge

go 1.16

require (
	example.com/a v1.1.0
	example.com/b v1.0.0
)
-- c2/b.go --
package main

import _ "example.com/b"
-- c3/go.mod --
module github.com/rogpeppe/gomerge

go 1.16

require (
	example.com/a v1.0.0
	example.com/a v1.1.0
	example.com/b v1.0.0
)
